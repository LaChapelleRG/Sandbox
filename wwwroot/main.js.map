{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Services/link.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/links/links.component.css","webpack:///./src/app/components/links/links.component.html","webpack:///./src/app/components/links/links.component.ts","webpack:///./src/app/components/todo/todo.component.css","webpack:///./src/app/components/todo/todo.component.html","webpack:///./src/app/components/todo/todo.component.ts","webpack:///./src/app/models/links.ts","webpack:///./src/app/modules/app-routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2C;AAEL;AACyB;AACT;AAGtD,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAKF;IAIE,qBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,aAAQ,GAAG,YAAY,CAAC;IAI5B,CAAC;IAEL,8BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,QAAQ,CAAC;aACzC,IAAI,CACH,0DAAG,EAAG,EACN,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAC7C,CAAC;IACN,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAU;QAChB,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,SAAI,EAAI,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,CAAC,CAAC,IAAI,CACnC,0DAAG,EAAE,EACL,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAQ,iBAAe,EAAI,CAAC,CAAC,CACzD,CAAC;IACJ,CAAC;IAED,kCAAY,GAAZ,UAAa,IAAU;QACrB,EAAE,EAAC,IAAI,CAAC,EAAC;YACP,IAAI,CAAC,WAAW,CAAC,mBAAiB,IAAI,CAAC,aAAe,EAAE,SAAS,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAW;QAAnB,iBAKC;QAJC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,IAAI,CACjE,0DAAG,CAAC,UAAC,IAAW,IAAK,YAAI,CAAC,WAAW,CAAC,gBAAc,IAAI,CAAC,aAAe,EAAE,SAAS,CAAC,EAA/D,CAA+D,CAAC,EACrF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAQ,SAAS,CAAC,CAAC,CAC/C,CAAC;IACJ,CAAC;IAED,gCAAU,GAAV,UAAW,IAAW;QAAtB,iBAKC;QAJC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,IAAI,CACzD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,WAAW,CAAC,kBAAgB,IAAI,CAAC,aAAe,EAAE,SAAS,CAAC,EAAjE,CAAiE,CAAC,EAC3E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,YAAY,CAAC,CAAC,CAChD,CAAC;IACJ,CAAC;IAED,gCAAU,GAAV,UAAW,IAAW;QAAtB,iBAOC;QANC,IAAM,GAAG,GAAM,IAAI,CAAC,QAAQ,SAAI,IAAI,CAAC,EAAI,CAAC;QAE1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,GAAG,EAAE,WAAW,CAAC,CAAC,IAAI,CACnD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,WAAW,CAAC,kBAAgB,IAAI,CAAC,aAAe,EAAE,SAAS,CAAC,EAAjE,CAAiE,CAAC,EAC3E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAQ,YAAY,CAAC,CAAC,CAClD,CAAC;IACJ,CAAC;IAEO,iCAAW,GAAnB,UAAoB,OAAc,EAAE,IAAW;QAE7C,yFAAyF;QACzF,oGAAoG;QACpG,MAAM,CAAC,OAAO,CAAC,aAAa,GAAC,kBAAkB;QAC/C,MAAM,CAAC,KAAK,EAAE,CAAC;QAEf,MAAM,EAAC,IAAI,CAAC,EAAC;YACX,KAAK,SAAS;gBACV,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;gBACnC,KAAK,CAAC;YACV,KAAK,SAAS;gBACV,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;gBACnC,KAAK,CAAC;YACV,KAAK,OAAO;gBACR,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAC/B,KAAK,CAAC;QAEZ,CAAC;IACH,CAAC;IAEO,iCAAW,GAAnB,UAAuB,SAAuB,EAAE,MAAU;QAA1D,iBASC;QATsB,mDAAuB;QAC5C,MAAM,CAAC,UAAC,KAAU;YAEhB,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,oDAAoD;YAEpD,MAAM,CAAC,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAnFU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMgB,+DAAU;OALf,WAAW,CAoFvB;IAAD,kBAAC;CAAA;AApFuB;;;;;;;;;;;;ACdxB,oCAAoC,kBAAkB,oBAAoB,KAAK,cAAc,eAAe,iBAAiB,KAAK,gBAAgB,yBAAyB,KAAK,oBAAoB,yBAAyB,KAAK,sBAAsB,sBAAsB,KAAK,wBAAwB,uBAAuB,KAAK,eAAe,sBAAsB,gBAAgB,kBAAkB,KAAK,S;;;;;;;;;;;ACAnZ,4lCAA4lC,GAAG,MAAM,gB;;;;;;;;;;;;;;;;;;;;;;;;;ACAziC;AACN;AAStD;IAEE,sBACU,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QAF9B,UAAK,GAAG,QAAQ,CAAC;QAIf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAID,8BAAO,GAAP;QACE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;QACnB,IAAI,MAAM,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;QAExC,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAfU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAImB,kEAAW;OAHnB,YAAY,CAgBxB;IAAD,mBAAC;CAAA;AAhBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AAEM;AACiC;AACZ;AAEvB;AACmB;AACW;AACV;AAkBjE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,4FAAkB;gBAClB,gFAAc;gBACd,6EAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,4EAAgB;gBAChB,kFAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5BtB,mB;;;;;;;;;;;ACAA,mK;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,0BAA0B,qBAAqB,4BAA4B,KAAK,mBAAmB,wBAAwB,KAAK,wBAAwB,qBAAqB,yBAAyB,0BAA0B,wBAAwB,KAAK,yBAAyB,qBAAqB,yBAAyB,0BAA0B,wBAAwB,KAAK,eAAe,0BAA0B,KAAK,2BAA2B,2BAA2B,KAAK,kBAAkB,0BAA0B,KAAK,oBAAoB,qBAAqB,KAAK,uBAAuB,wBAAwB,KAAK,gBAAgB,yBAAyB,KAAK,C;;;;;;;;;;;ACArqB,gXAAgX,cAAc,sQAAsQ,oBAAoB,w0BAAw0B,y8EAAy8E,upHAAupH,iqB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5/O;AACV;AACf;AAQ3C;IASE,wBACU,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAG9B,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;aAClB,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;IAC9C,CAAC;IAED,iCAAQ,GAAR,UAAS,GAAW;QAClB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED,6BAAI,GAAJ,UAAK,EAAU;QAAf,iBAGC;QAFC,8BAA8B;QAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,YAAY,GAAG,IAAI,EAAxB,CAAwB,CAAC,CAAC;IACvE,CAAC;IAED,+BAAM,GAAN;QAAA,iBAEC;QADC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CAAC,CAAC;IAChF,CAAC;IAED,+BAAM,GAAN,UAAO,EAAU;QAAjB,iBAKC;QAJC,gCAAgC;QAChC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAChC,cAAI,IAAI,YAAI,CAAC,YAAY,GAAG,IAAI,EAAxB,CAAwB,CACjC,CAAC;IACJ,CAAC;IAED,sCAAa,GAAb;QAAA,iBAIC;QAHC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAClD,cAAM,YAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CACtB,CAAC;IACJ,CAAC;IAED,4BAAG,GAAH;QAAA,iBAiBC;QAhBC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAE3B,EAAE,EAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;YACtC,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAChD,MAAM,CAAC;QACX,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,mDAAK,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAClC,cAAM,YAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CACtB,CAAC;IACJ,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAxEU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAWmB,kEAAW;OAVnB,cAAc,CA0E1B;IAAD,qBAAC;CAAA;AA1E0B;;;;;;;;;;;;ACV3B,mB;;;;;;;;;;;ACAA,4V;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;;ACP1B;AAAA;IAAA;IAOA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACPwC;AACK;AACiC;AAE/E,IAAM,MAAM,GAAG;IACb,EAAC,IAAI,EAAC,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAC;IACtD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAkB,EAAC;CACnD,CAAC;AAQF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAN5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAC7B;YACD,OAAO,EAAC,CAAC,4DAAY,CAAC;SACvB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACf7B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {Links} from '../models/links';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\ndeclare var toastr: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LinkService {\n\n  private linksUrl = '/api/links';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getLinks(): Observable<Links[]>{\n    return this.http.get<Links[]>(this.linksUrl)\n      .pipe(\n        tap( ),\n        catchError(this.handleError('getLinks', []))\n      );\n  }\n\n  getLink(id: number): Observable<Links>{\n    const url = `${this.linksUrl}/${id}`;\n    return this.http.get<Links>(url).pipe(\n      tap(),\n      catchError(this.handleError<Links>(`getLinks id=${id}`))\n    );\n  }\n\n  successFetch(link:Links){\n    if(link){\n      this.showMessage(`Fetched Link: ${link.displayedName}`, 'success');\n    }\n  }\n\n  addLink(link: Links): Observable<Links>{\n    return this.http.post<Links>(this.linksUrl, link, httpOptions).pipe(\n      tap((link: Links) => this.showMessage(`added Link ${link.displayedName}`, 'success')),\n      catchError(this.handleError<Links>('addLink'))\n    );\n  }\n\n  updateLink(link: Links): Observable<any>{\n    return this.http.put(this.linksUrl, link, httpOptions).pipe(\n      tap(_ => this.showMessage(`updated link ${link.displayedName}`, 'success')),\n      catchError(this.handleError<any>('updateLink'))\n    );\n  }\n\n  deleteLink(link: Links): Observable<Links>{\n    const url = `${this.linksUrl}/${link.id}`;\n\n    return this.http.delete<Links>(url, httpOptions).pipe(\n      tap(_ => this.showMessage(`deleted link ${link.displayedName}`, 'warning')),\n      catchError(this.handleError<Links>('deleteLink'))\n    );\n  }\n\n  private showMessage(message:string, type:string){\n\n    //toastr.options.timeOut = 0; // How long the toast will display without user interaction\n    //toastr.options.extendedTimeOut = 0; // How long the toast will display after a user hovers over it\n    toastr.options.positionClass='toast-top-center'\n    toastr.clear();\n\n    switch(type){\n      case 'success':\n          toastr.success(message, 'Success');\n          break;\n      case 'warning':\n          toastr.warning(message, 'Warning');\n          break;\n      case 'error':\n          toastr.error(message, 'Error');\n          break;\n          \n    }\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      this.showMessage(error, 'error');\n      console.log(error);\n      //this.log('${operation} failed: ${error.message}');\n      \n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"\\r\\n.banner-image{\\r\\n  width: 100%;\\r\\n  height: 200px;\\r\\n}\\r\\n\\r\\n.well{\\r\\n  margin:0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.navbar{\\r\\n  margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n.navbar-nav{\\r\\n  padding-left: 50px;\\r\\n}\\r\\n\\r\\n.navbar-brand{\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\n.main-container{\\r\\n  padding-top: 5px;\\r\\n}\\r\\n\\r\\nfooter{\\r\\n  position: fixed;\\r\\n  bottom: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div >\\n  <img src=\\\"./assets/treebanner.png\\\" class=\\\"banner-image\\\">\\n</div>\\n<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/dashboard\\\">\\n        <i class=\\\"fa fa-gears\\\"></i>\\n        Sandbox\\n      </a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li>\\n          <a routerLink=\\\"/dashboard\\\">Home</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"main-container\\\">\\n    <div class=\\\"col-sm-2\\\">\\n      <app-links></app-links>\\n    </div>\\n    <div class=\\\"col-sm-10 \\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n  <footer class=\\\"text-center\\\">\\n      Sandbox &copy; {{year}}\\n  </footer>\\n\"","import { Component, ViewContainerRef } from '@angular/core';\nimport { LinkService } from './Services/link.service';\nimport { getSymbolIterator } from '../../node_modules/@angular/core/src/util';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Sanbox';\n  constructor(\n    private service: LinkService\n  ){\n    this.year = this.getYear();\n  }\n\n  year:string;\n\n  getYear(): string{\n    var d = new Date();\n    var result = d.getFullYear().toString();\n\n    return result;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LinksComponent } from './components/links/links.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './modules/app-routing.module';\nimport { HttpClientModule } from '../../node_modules/@angular/common/http';\nimport { TodoComponent } from './components/todo/todo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    LinksComponent,\n    TodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"well text-center\\\">\\n  Welcome to the Sandbox\\n</div>\\n<div>\\n    here are some things todo:\\n    <app-todo></app-todo>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".btnAdd{\\r\\n    float: right;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.link-name{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.glyphicon-edit{\\r\\n    float: right;\\r\\n    margin-left: 5px;\\r\\n    margin-right: 5px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.glyphicon-trash{\\r\\n    float: right;\\r\\n    margin-left: 5px;\\r\\n    margin-right: 5px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#tbUrl{\\r\\n    margin-left: 36px;\\r\\n}\\r\\n\\r\\n#tbCreateTimestamp{\\r\\n    margin-right: 50px;\\r\\n}\\r\\n\\r\\n#lblError{\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.panel-body{\\r\\n    padding: 3px;\\r\\n}\\r\\n\\r\\n.panel-heading{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#tbUrl {\\r\\n    margin-left: 0px;\\r\\n}\"","module.exports = \"<div class=\\\"main\\\">\\n  <div *ngIf=\\\"!links\\\">\\n    <i class=\\\"fa fa-gear fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\n    loading Links...\\n  </div>\\n  <div *ngIf=\\\"links\\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#links-list\\\">\\n        Links\\n        <span class=\\\"badge\\\">{{links.length}}</span>\\n      </div>\\n      <div class=\\\"panel-body collapse in\\\" id=\\\"links-list\\\">\\n        <div class=\\\"list-group\\\">\\n          <a *ngFor=\\\"let link of links\\\" class=\\\"list-group-item\\\">\\n            <span class=\\\"link-name\\\" (click)='openLink(link.url)'>{{link.displayedName}}</span>\\n            <i class=\\\"glyphicon glyphicon-trash\\\" (click)='delete(link.id)' data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\"></i>\\n            <i class=\\\"glyphicon glyphicon-edit\\\" (click)='edit(link.id)' data-toggle=\\\"modal\\\" data-target=\\\"#editModal\\\"></i>\\n          </a>\\n        </div>\\n        <a class=\\\"btn btn-primary btnAdd\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\">\\n          <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\n          Add\\n        </a>\\n      </div>\\n    </div>\\n    \\n  </div>\\n</div>\\n\\n<!--AddModal-->\\n<div id=\\\"addModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <form #addForm=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          <h4 class=\\\"modal-title\\\">Add Link</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n\\n          <div class=\\\"addMain form-group \\\">\\n            <div class=\\\"form-inline\\\" [class.has-error]=\\\"Name.invalid && Name.dirty\\\">\\n              <label for=\\\"tbAddName\\\" class=\\\"col-md-3 control-label\\\">Name: </label>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" #Name=\\\"ngModel\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"tbAddName\\\" required>\\n            </div>\\n            <div *ngIf=\\\"Name.invalid && Name.dirty\\\" class=\\\"text-danger col-md-offset-3\\\">\\n              * A Name value is required.\\n            </div>\\n            <div class=\\\"form-inline\\\" [class.has-error]=\\\"URL.invalid && URL.dirty\\\">\\n              <label for=\\\"tbAddUrl\\\" class=\\\"col-md-3 control-label\\\">Url: </label>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"url\\\" #URL=\\\"ngModel\\\" name=\\\"url\\\" class=\\\"form-control\\\" id=\\\"tbAddUrl\\\" required>\\n            </div>\\n            <div *ngIf=\\\"URL.invalid && URL.dirty\\\" class=\\\"text-danger col-md-offset-3\\\">\\n              * A URL value is required.\\n            </div>\\n            <div class=\\\"form-inline\\\" [class.has-error]=\\\"Sort.invalid && Sort.dirty\\\">\\n              <label for=\\\"addSort\\\" class=\\\"col-md-3 control-label\\\">Sort:</label>\\n              <input type=\\\"number\\\" [(ngModel)]=\\\"sort\\\" #Sort=\\\"ngModel\\\" name=\\\"sort\\\" class=\\\"form-control\\\" id=\\\"tbAddSort\\\" required>\\n            </div>\\n            <div *ngIf=\\\"Sort.invalid && Sort.dirty\\\" class=\\\"text-danger col-md-offset-3\\\">\\n              * A Sort value is required.\\n            </div>\\n          </div>\\n\\n\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button class=\\\"btn btn-primary add col-md-offset-8\\\" [disabled]=\\\"addForm.invalid\\\" (click)=\\\"add()\\\" data-dismiss=\\\"modal\\\">\\n            <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\n            Add\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"cancel()\\\">\\n            <i class=\\\"fa fa-close\\\"></i>\\n            Cancel\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<!--Edit Modal-->\\n<div id=\\\"editModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <form #editForm=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          <h4 class=\\\"modal-title\\\">Update Link</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"EditMain\\\" *ngIf=\\\"selectedLink\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"tbId\\\" class=\\\"col-md-4\\\">Id: </label>\\n                <input type=\\\"text\\\" name=\\\"id\\\" [(ngModel)]=\\\"selectedLink.id\\\" class=\\\"form-control disabled\\\" id=\\\"tbId\\\" disabled>\\n              </div>\\n              <div class=\\\"form-inline left\\\" [class.has-error]=\\\"EditName.invalid && EditName.dirty\\\">\\n                <label for=\\\"tbName\\\" class=\\\"col-md-4\\\">Name: </label>\\n                <input type=\\\"text\\\" #EditName=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"selectedLink.displayedName\\\" class=\\\"form-control\\\" id=\\\"tbName\\\"\\n                  required>\\n              </div>\\n              <div *ngIf=\\\"EditName.invalid && EditName.dirty\\\" class=\\\"text-danger col-md-offset-3\\\">\\n                * A Name value is required.\\n              </div>\\n              <div class=\\\"form-inline\\\" [class.has-error]=\\\"EditUrl.invalid && EditUrl.dirty\\\">\\n                <label for=\\\"tbUrl\\\" class=\\\"col-md-4\\\">Url: </label>\\n                <input type=\\\"text\\\" #EditUrl=\\\"ngModel\\\" name=\\\"url\\\" [(ngModel)]=\\\"selectedLink.url\\\" class=\\\"form-control\\\" id=\\\"tbUrl\\\" required>\\n                <input type=\\\"button\\\" data-toggle=\\\"tooltip\\\" [disabled]=\\\"EditUrl.invalid\\\" title=\\\"View...\\\" class=\\\"btn btn-default\\\" (click)=\\\"openLink(selectedLink.url)\\\"\\n                  value=\\\"...\\\">\\n              </div>\\n              <div *ngIf=\\\"EditUrl.invalid && EditUrl.dirty\\\" class=\\\"text-danger col-md-offset-3\\\">\\n                * A Url value is required.\\n              </div>\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"tbCreateTimestamp\\\" class=\\\"col-md-4\\\">Create Timestamp: </label>\\n                <input type=\\\"text\\\" name=\\\"createTimestamp\\\" [(ngModel)]=\\\"selectedLink.createTimestamp\\\" class=\\\"form-control\\\" id=\\\"tbCreateTimestamp\\\"\\n                  disabled>\\n              </div>\\n              <div class=\\\"form-inline\\\" [class.has-error]=\\\"EditSort.invalid && EditSort.dirty\\\">\\n                <label for=\\\"tbSort\\\" class=\\\"col-md-4 control-label\\\">Sort:</label>\\n                <input type=\\\"number\\\" #EditSort=\\\"ngModel\\\" name=\\\"editSort\\\" [(ngModel)]=\\\"selectedLink.sort\\\" class=\\\"form-control\\\" id=\\\"tbEditSort\\\"\\n                  required>\\n              </div>\\n              <div *ngIf=\\\"EditSort.invalid && EditSort.dirty\\\" class=\\\"text-danger col-md-offset-3\\\">\\n                * A sort order is required.\\n              </div>\\n              <div class=\\\"checkbox\\\">\\n                <label>\\n                  <input type=\\\"checkbox\\\" name=\\\"visible\\\" disabled [(ngModel)]=\\\"selectedLink.visible\\\"> Visible\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\" *ngIf=\\\"selectedLink\\\">\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"editForm.invalid\\\" data-dismiss=\\\"modal\\\" (click)=\\\"update()\\\">\\n              <i class=\\\"glyphicon glyphicon-save\\\"></i>\\n            Update\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">\\n            <i class=\\\"fa fa-close\\\"></i>\\n            Cancel\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\\n<!--Delete Modal-->\\n<div id=\\\"deleteModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Delete Link</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"deleteMain\\\">\\n          <label>Are you sure that you want to delete this link?</label>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"confirmDelete()\\\">\\n          <i class=\\\"fa fa-trash\\\"></i>\\n          Yes\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">\\n          <i class=\\\"fa fa-close\\\"></i>\\n          No\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { LinkService } from '../../Services/link.service';\nimport { Links } from '../../models/links';\n\n\n@Component({\n  selector: 'app-links',\n  templateUrl: './links.component.html',\n  styleUrls: ['./links.component.css']\n})\nexport class LinksComponent implements OnInit {\n\n  links: Links[];\n  selectedLink: Links;\n\n  name: string;\n  url:string;\n  sort: number;\n\n  constructor(\n    private service: LinkService\n  ) { \n    \n  }\n\n  ngOnInit() {\n    this.getLinks();\n  }\n\n  getLinks(): void{\n    this.service.getLinks()\n        .subscribe(links => this.links = links);\n  }\n\n  openLink(url: string){\n    window.open(url, '_blank');\n  }\n\n  edit(id: number):void{\n    //alert('Edit LinkId: ' + id);\n    this.service.getLink(id).subscribe(link => this.selectedLink = link);\n  }\n\n  update():void{\n    this.service.updateLink(this.selectedLink).subscribe(link => this.getLinks());\n  }\n\n  delete(id: number):void{\n    //alert('Delete LinkId: ' + id);\n    this.service.getLink(id).subscribe(\n      link => this.selectedLink = link\n    );\n  }\n\n  confirmDelete(){\n    this.service.deleteLink(this.selectedLink).subscribe(\n      () => this.getLinks()\n    );\n  }\n\n  add(){\n    this.name = this.name.trim();\n    this.url = this.url.trim();\n    \n    if(!this.name || !this.url || !this.sort){\n        alert(\"Add fail: Name, Url or Sort are empty.\");\n        return;\n    }\n\n    var link = new Links();\n    link.displayedName = this.name;\n    link.url = this.url;\n    link.sort = this.sort;\n\n    this.service.addLink(link).subscribe(\n      () => this.getLinks()\n    );\n  }\n\n  cancel(){\n    this.name = \"\";\n    this.url = \"\";\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <div>\\n    <i class=\\\"fa fa-gear fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\n    loading Todo...\\n  </div>\\n  <div>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading text-left\\\">\\n        Todo\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        Todo\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Links{\r\n    id: number;\r\n    displayedName: string;\r\n    url: string;\r\n    createTimestamp: Date;\r\n    visible: boolean;\r\n    sort: number;\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule} from '@angular/router';\nimport{ DashboardComponent} from '../components/dashboard/dashboard.component';\n\nconst routes = [\n  {path:'', redirectTo: '/dashboard', pathMatch: 'full'},\n  {path: 'dashboard', component: DashboardComponent},\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports:[RouterModule]\n})\nexport class AppRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}